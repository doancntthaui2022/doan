@using Microsoft.AspNetCore.Mvc.Localization
@using HoangNV.HotelBooking.BusinessLogic.Models
@using Microsoft.AspNetCore.Http
@inject IViewLocalizer Localizer
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject Microsoft.Extensions.Localization.IStringLocalizer<HoangNV.HotelBooking.Web.Localization.SharedResource> _sharedLocalizer
@addTagHelper "*, HoangNV.HotelBooking.Web"
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml"; Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var userRole = HttpContextAccessor.HttpContext.Session.GetString("user_role");
    List<CostRoomType> costRoomTypes = ViewData["CostRoomType"] as List<CostRoomType>;
    List<CostRoomType> costRoomTypesByMonth = ViewData["CostRoomTypeByMonth"] as List<CostRoomType>;
}
@if(userRole=="Employee")
{
    <div style="margin-top:-5rem;float:right">
<button class="ui labeled icon button" onclick="@("window.location.href='" + @Url.Content("/Admin/Home/GetCostMonth?month="+DateTime.Now.Month+"&year="+DateTime.Now.Year ) + "'");">
  <i class="arrow left icon"></i>
  Thống kê theo tháng
</button>
    <button class="ui right labeled icon button" onclick="@("window.location.href='" + @Url.Content("/Admin/Home/GetCostYear?year="+DateTime.Now.Year) + "'");">
  <i class="right arrow icon"></i>
  Thống kê theo năm
</button>

</div>
<div class="ui" style="margin-top: 7rem;">
    <div class="ui form hs-form">
        <div class="ui two column stackable grid">
            <div class="sixteen wide large screen thirteen wide computer twelve wide tablet column">
                <div class="ui stackable grid">
                    <div class="sixteen wide large screen thirteen wide computer twelve wide tablet column">
                        <div class="ui stackable grid">
                            <div class="row inline fields change-range">
                                <div class=" column field sixteen wide">
                                    <h2>Thống kê theo năm</h2>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="card mb-4">
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="myAreaChart" style="display: block; height: 301px; width: 1000px; margin-top: 4rem;"></canvas>
                </div>
                <hr>
            </div>
        </div>
    </div>
    <div class="col-12" style="text-align:center">
        <b><i>Biểu đồ doanh thu theo từng tháng trong năm</i></b>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="card mb-4">
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="myBarChart" style="display: block; height: 301px; width: 1000px; margin-top: 4rem;"></canvas>
                </div>
                <hr>
            </div>
        </div>
    </div>
    <div class="col-12" style="text-align:center">
        <b><i>Biểu đồ doanh thu theo từng loại phòng trong năm</i></b>
    </div>
</div>
<div class="ui" style="margin-top: 7rem;">
    <div class="ui form hs-form">
        <div class="ui two column stackable grid">
            <div class="sixteen wide large screen thirteen wide computer twelve wide tablet column">
                <div class="ui stackable grid">
                    <div class="sixteen wide large screen thirteen wide computer twelve wide tablet column">
                        <div class="ui stackable grid">
                            <div class="row inline fields change-range">
                                <div class=" column field sixteen wide">
                                    <h2>Thống kê theo tháng</h2>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="card mb-4">
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="myBarChart2" style="display: block; height: 301px; width: 1000px; margin-top: 4rem;"></canvas>
                </div>
                <hr>
            </div>
        </div>
    </div>
    <div class="col-12" style="text-align:center">
        <b><i>Biểu đồ doanh thu theo từng loại phòng trong tháng hiện tại</i></b>
    </div>
</div>
}
<resources names='new[] { "Localization.SharedResource"}'></resources>
@section Scripts{
<script>
        $('#startDateCalendar')
            .calendar({
                type: 'year'
            });
            $("#btnSearch").trigger('click');

        $("#btnSearch").on('click', () => {
            var date = $("#startDate").val();
            if (date == null || date == '')
                date = new Date().getFullYear();
            RedirectToPage("/Admin/Home/GetCostYear?year=" + date);
        })
        var testMonth = @Html.Raw(Json.Serialize(ViewBag.Costs));
        var arrCostRoomType=[];
        var arrCostRoomTypeByMonth=[];
        var arrRoomTypeCode=[];
        var arrRoomTypeCodeByMonth=[];
        @foreach (var item in costRoomTypes)
       {
           @:arrCostRoomType.push(@item.Cost); 
           @:arrRoomTypeCode.push('@item.RoomTypeCode'); 
       }
       @if(costRoomTypes.Count==0)
       {
           @:arrCostRoomType.push(0); 
           @:arrRoomTypeCode.push("None"); 
       }
        @foreach (var item in costRoomTypesByMonth)
       {
           @:arrCostRoomTypeByMonth.push(@item.Cost); 
           @:arrRoomTypeCodeByMonth.push('@item.RoomTypeCode'); 
       }
       @if(costRoomTypesByMonth.Count==0)
       {
           @:arrCostRoomTypeByMonth.push(0); 
           @:arrRoomTypeCodeByMonth.push("None"); 
       }
    </script>


    <script>
        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';
        function number_format(number, decimals, dec_point, thousands_sep) {
            // *     example: number_format(1234.56, 2, ',', ' ');
            // *     return: '1 234,56'
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }
        // Bar Chart Example
        var ctx = document.getElementById("myBarChart");
        var myBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: arrRoomTypeCode,
                datasets: [{
                    label: "Doanh thu",
                    backgroundColor: "#4e73df",
                    hoverBackgroundColor: "#2e59d9",
                    borderColor: "#4e73df",
                    data: arrCostRoomType,
                }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'month'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 12,
                            fontSize: 15,
                        },
                        maxBarThickness: 25,
                    }],
                    yAxes: [{
                        ticks: {
                            min: 0,
                            //max: 10000000,
                            maxTicksLimit: 5,
                            padding: 10,
                            fontSize: 15,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return number_format(value)+" VNĐ";
                            }
                        },
                        gridLines: {
                            color: "rgb(0,0,0)",
                            zeroLineColor: "rgb(0,0,0)",
                            drawBorder: false,
                            borderDash: [6],
                            zeroLineBorderDash: [6]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    titleMarginBottom: 10,
                    titleFontColor: '#000',
                    titleFontSize: 15,
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#000",
                    borderColor: '#000',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': ' + number_format(tooltipItem.yLabel)+' VNĐ';
                        }
                    }
                },
            }
        });
    </script>


    <script>
        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';
        function number_format(number, decimals, dec_point, thousands_sep) {
            // *     example: number_format(1234.56, 2, ',', ' ');
            // *     return: '1 234,56'
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }
        // Bar Chart Example
        var ctx = document.getElementById("myBarChart2");
        var myBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: arrRoomTypeCodeByMonth,
                datasets: [{
                    label: "Doanh thu",
                    backgroundColor: "#4e73df",
                    hoverBackgroundColor: "#2e59d9",
                    borderColor: "#4e73df",
                    data: arrCostRoomTypeByMonth,
                }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'month'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 12,
                            fontSize: 15,
                        },
                        maxBarThickness: 25,
                    }],
                    yAxes: [{
                        ticks: {
                            min: 0,
                            //max: 10000000,
                            maxTicksLimit: 5,
                            padding: 10,
                            fontSize: 15,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return number_format(value)+" VNĐ";
                            }
                        },
                        gridLines: {
                            color: "rgb(0,0,0)",
                            zeroLineColor: "rgb(0,0,0)",
                            drawBorder: false,
                            borderDash: [6],
                            zeroLineBorderDash: [6]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    titleMarginBottom: 10,
                    titleFontColor: '#000',
                    titleFontSize: 15,
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#000",
                    borderColor: '#000',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': ' + number_format(tooltipItem.yLabel)+' VNĐ';
                        }
                    }
                },
            }
        });
    </script>
    <script>
        // Set new default font family and font color to mimic Bootstrap's default styling
        //Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"';
        Chart.defaults.global.defaultFontColor = '#000';
        function number_format(number, decimals, dec_point, thousands_sep) {
            // *     example: number_format(1234.56, 2, ',', ' ');
            // *     return: '1 234,56'
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }
        // Area Chart Example
        var ctx = document.getElementById("myAreaChart");
        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"],
                datasets: [{
                    label: "Doanh thu",
                    lineTension: 0.3,
                    backgroundColor: "rgba(78, 115, 223, 0.5)",
                    borderColor: "rgba(78, 115, 223, 1)",
                    pointRadius: 3,
                    pointBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointBorderColor: "rgba(78, 115, 223, 1)",
                    pointHoverRadius: 3,
                    pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                    pointHitRadius: 10,
                    pointBorderWidth: 2,
                    //data: [0, 10000, 5000, 15000, 10000, 20000, 15000, 25000, 20000, 30000, 25000, 40000],
                    data: testMonth,
                }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },

                scales: {
                    xAxes: [{
                        time: {
                            unit: 'date'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 7,
                            fontSize: 15,
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 4,
                            padding: 5,
                            fontSize: 15,
                            beginAtZero: true,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return number_format(value) + ' VNĐ';
                            }
                        },
                        gridLines: {
                            color: "rgb(0,0,0)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [5],
                            zeroLineBorderDash: [10]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#000",
                    titleMarginBottom: 10,
                    titleFontColor: '#000',
                    titleFontSize: 15,
                    borderColor: '#000',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    intersect: false,
                    mode: 'index',
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': ' + number_format(tooltipItem.yLabel) + " VNĐ";
                        }
                    }
                }
            }
        });
    </script>
}